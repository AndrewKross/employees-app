{"version":3,"sources":["const.ts","reducer.ts","components/controls/controls.tsx","components/employees-list/employees-list.tsx","components/main-page/main-page.tsx","components/employee-page/employee-page.tsx","components/app/App.tsx","index.tsx"],"names":["SortType","FilterType","AppRoute","initialState","employeesData","sortType","filterType","isArchiveFilter","ActionType","ActionCreator","data","type","payload","isChecked","withRouter","connect","state","dispatch","changeSortType","changeFilterType","changeIsArchiveFilter","history","className","name","id","defaultChecked","onChange","htmlFor","evt","target","value","checked","onClick","push","filteredEmployeeData","filter","it","role","isArchive","sort","a","b","dateA","birthday","split","reverse","join","dateB","Date","parse","map","phone","Math","random","MainPage","saveEmployee","employeeId","selectedEmployee","length","find","useState","employeeData","setEmployeeData","required","pattern","maxLength","preventDefault","newEmployeesData","findIndex","goBack","to","App","exact","path","component","render","match","params","Fragment","store","createStore","action","composeWithDevTools","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96948ea7.chunk.js","sourcesContent":["export const SortType = {\r\n  NAME: `name`,\r\n  BIRTHDAY: `birthday`,\r\n}\r\n\r\nexport const FilterType = {\r\n  NONE: `none`,\r\n  COOK: `cook`,\r\n  DRIVER: `driver`,\r\n  WAITER: `waiter`,\r\n}\r\n\r\nexport const AppRoute = {\r\n  MAIN: `/`,\r\n  EMPLOYEE_PAGE: `/employee/`,\r\n}\r\n","import { EmployeeData } from \"./types\";\r\nimport { FilterType, SortType } from \"./const\";\r\n\r\ntype Action = {\r\n  type: string\r\n  payload?: any\r\n}\r\n\r\nconst initialState = {\r\n  employeesData: [],\r\n  sortType: SortType.NAME,\r\n  filterType: FilterType.NONE,\r\n  isArchiveFilter: false,\r\n}\r\n\r\nconst ActionType = {\r\n  LOAD_EMPLOYEES: `LOAD_EMPLOYEES`,\r\n  CHANGE_SORT_TYPE: `CHANGE_SORT_TYPE`,\r\n  CHANGE_FILTER_TYPE: `CHANGE_FILTER_TYPE`,\r\n  CHANGE_IS_ARCHIVE_FILTER: `CHANGE_IS_ARCHIVE_FILTER`,\r\n}\r\n\r\nconst ActionCreator = {\r\n  loadEmployees: (data: EmployeeData[]) => ({\r\n    type: ActionType.LOAD_EMPLOYEES,\r\n    payload: data,\r\n  }),\r\n  changeSortType: (type: string) => ({\r\n    type: ActionType.CHANGE_SORT_TYPE,\r\n    payload: type,\r\n  }),\r\n  changeFilterType: (type: string) => ({\r\n    type: ActionType.CHANGE_FILTER_TYPE,\r\n    payload: type,\r\n  }),\r\n  changeIsArchiveFilter: (isChecked: boolean) => ({\r\n    type: ActionType.CHANGE_IS_ARCHIVE_FILTER,\r\n    payload: isChecked,\r\n  }),\r\n}\r\n\r\nconst reducer = (state = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.LOAD_EMPLOYEES:\r\n      return {\r\n        ...state,\r\n        employeesData: action.payload,\r\n      }\r\n    case ActionType.CHANGE_SORT_TYPE:\r\n      return {\r\n        ...state,\r\n        sortType: action.payload\r\n      }\r\n    case ActionType.CHANGE_FILTER_TYPE:\r\n      return {\r\n        ...state,\r\n        filterType: action.payload\r\n      }\r\n    case ActionType.CHANGE_IS_ARCHIVE_FILTER:\r\n      return {\r\n        ...state,\r\n        isArchiveFilter: action.payload,\r\n      }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}\r\n\r\nexport { reducer, ActionCreator }\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { AppRoute, FilterType, SortType } from \"../../const\";\r\nimport { State } from \"../../types\";\r\nimport { ActionCreator } from \"../../reducer\";\r\n\r\ntype Props = {\r\n  sortType: string\r\n  filterType: string\r\n  changeSortType: (sortType: string) => void\r\n  changeFilterType: (filterType: string) => void\r\n  changeIsArchiveFilter: (isChecked: boolean) => void\r\n  history: any\r\n}\r\n\r\nconst Controls = ({ sortType, filterType, changeSortType, changeFilterType, changeIsArchiveFilter, history }: Props) => {\r\n  return (\r\n    <section className=\"controls\">\r\n      <h2>Controls</h2>\r\n      <div className=\"controls__sorting\">\r\n        <p>Сортировать по:</p>\r\n        <input type=\"radio\" name=\"sortInput\" id=\"sortInput-1\" defaultChecked onChange={\r\n          () => changeSortType(SortType.NAME)\r\n        }/>\r\n        <label htmlFor=\"sortInput-1\">Имени</label>\r\n        <input type=\"radio\" name=\"sortInput\" id=\"sortInput-2\" onChange={() => changeSortType(SortType.BIRTHDAY)}/>\r\n        <label htmlFor=\"sortInput-2\">Дате рождения</label>\r\n      </div>\r\n      <div className=\"controls__filters\">\r\n        <p>Фильтровать по:</p>\r\n        <p>Должности</p>\r\n        <select onChange={(evt) => changeFilterType(evt.target.value)}>\r\n          <option value={FilterType.NONE}>Все</option>\r\n          <option value={FilterType.COOK}>Повар</option>\r\n          <option value={FilterType.WAITER}>Официант</option>\r\n          <option value={FilterType.DRIVER}>Водитель</option>\r\n        </select>\r\n        <input type=\"checkbox\" id=\"archiveFilter\" onChange={\r\n          (evt) => changeIsArchiveFilter(evt.target.checked)\r\n        }/>\r\n        <label htmlFor=\"archiveFilter\">В архиве</label>\r\n      </div>\r\n      <button className=\"add-new-btn\"\r\n              onClick={() => history.push(`${AppRoute.EMPLOYEE_PAGE}new`)}>\r\n        Добавить нового сотрудника\r\n      </button>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  sortType: state.sortType,\r\n  filterType: state.filterType,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  changeSortType(sortType: string) {\r\n    dispatch(ActionCreator.changeSortType(sortType))\r\n  },\r\n  changeFilterType(filterType: string) {\r\n    dispatch(ActionCreator.changeFilterType(filterType))\r\n  },\r\n  changeIsArchiveFilter(isChecked: boolean) {\r\n    dispatch(ActionCreator.changeIsArchiveFilter(isChecked))\r\n  },\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Controls))\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EmployeeData, State } from \"../../types\";\r\nimport { AppRoute, FilterType, SortType } from \"../../const\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\ntype Props = {\r\n  employeesData: EmployeeData[]\r\n  sortType: string\r\n  filterType: string\r\n  isArchiveFilter: boolean\r\n  history: any\r\n}\r\n\r\nconst EmployeesList = ({ employeesData, sortType, filterType, isArchiveFilter, history }: Props) => {\r\n  let filteredEmployeeData = [...employeesData]\r\n\r\n  if (filterType !== FilterType.NONE) {\r\n    filteredEmployeeData = filteredEmployeeData.filter((it) => {\r\n      switch (filterType) {\r\n        case FilterType.DRIVER:\r\n          return it.role === FilterType.DRIVER\r\n        case FilterType.WAITER:\r\n          return it.role === FilterType.WAITER\r\n        case FilterType.COOK:\r\n          return it.role === FilterType.COOK\r\n        default:\r\n          return true\r\n      }\r\n    })\r\n  }\r\n\r\n  if (isArchiveFilter) {\r\n    filteredEmployeeData = filteredEmployeeData.filter((it) => it.isArchive)\r\n  }\r\n\r\n  filteredEmployeeData.sort((a, b) => {\r\n    switch (sortType) {\r\n      case SortType.NAME:\r\n        return a.name > b.name ? 1 : -1\r\n      case SortType.BIRTHDAY:\r\n        const dateA = a.birthday.split(`.`).reverse().join(`.`)\r\n        const dateB = b.birthday.split(`.`).reverse().join(`.`)\r\n        return Date.parse(dateA) > Date.parse(dateB) ? 1 : -1\r\n      default:\r\n        return a.name > b.name ? 1 : -1\r\n    }\r\n  })\r\n\r\n  return (\r\n    <section className=\"employees-section\">\r\n      <table className=\"employees\">\r\n        <thead>\r\n        <tr>\r\n          <td>Имя</td>\r\n          <td>Должность</td>\r\n          <td>Телефон</td>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {filteredEmployeeData.map((it) => (\r\n          <tr className=\"employees__field\" key={it.id + Math.random()}\r\n              onClick={() => history.push(`${AppRoute.EMPLOYEE_PAGE + it.id}`)}>\r\n            <td className=\"employees__name\">{it.name}</td>\r\n            <td className=\"employees__role\">{it.role}</td>\r\n            <td className=\"employees__phone\">{it.phone}</td>\r\n          </tr>\r\n        ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  employeesData: state.employeesData,\r\n  sortType: state.sortType,\r\n  filterType: state.filterType,\r\n  isArchiveFilter: state.isArchiveFilter,\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps)(EmployeesList))\r\n","import React from \"react\";\r\nimport Controls from \"../controls/controls\";\r\nimport EmployeesList from \"../employees-list/employees-list\";\r\n\r\nconst MainPage = () => (\r\n  <>\r\n    <header>\r\n      <h1>Employees App</h1>\r\n    </header>\r\n    <main>\r\n      <Controls/>\r\n      <EmployeesList/>\r\n    </main>\r\n  </>\r\n)\r\n\r\nexport default MainPage\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { EmployeeData, State } from \"../../types\";\r\nimport { AppRoute, FilterType } from \"../../const\";\r\nimport { ActionCreator } from \"../../reducer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  employeeId: string\r\n  employeesData: EmployeeData[]\r\n  saveEmployee: (data: EmployeeData[]) => void\r\n  history: any\r\n}\r\n\r\nconst EmployeePage = ({ employeeId, employeesData, saveEmployee, history }: Props) => {\r\n  const newEmployee = {\r\n    id: employeesData[employeesData.length - 1].id + 1,\r\n    name: `Name`,\r\n    phone: `Phone`,\r\n    birthday: `01.01.2000`,\r\n    role: `driver`,\r\n    isArchive: false,\r\n  }\r\n\r\n  const saveDataHandler = (evt: any) => {\r\n    evt.preventDefault()\r\n    const newEmployeesData = [...employeesData]\r\n\r\n    if (employeeId !== `new`) {\r\n      const employeeIndex = employeesData.findIndex((it) => it.id === +employeeId)\r\n      newEmployeesData[employeeIndex] = employeeData\r\n    } else {\r\n      newEmployeesData.push(employeeData)\r\n    }\r\n\r\n    saveEmployee(newEmployeesData)\r\n    history.goBack()\r\n  }\r\n\r\n  let selectedEmployee = newEmployee\r\n\r\n  if (employeeId !== `new`) {\r\n    selectedEmployee = employeesData.find((data) => data.id === +employeeId)!\r\n  }\r\n\r\n  const [employeeData, setEmployeeData] = useState(selectedEmployee)\r\n\r\n  return selectedEmployee ? (\r\n    <>\r\n      <header>\r\n        <h1>Карточка сотрудника</h1>\r\n      </header>\r\n      <section className=\"employee-page\">\r\n        <form className=\"employee-form\">\r\n          <label htmlFor=\"employee-name-input\">Имя: </label>\r\n          <input type=\"text\" id=\"employee-name-input\" value={employeeData.name} required\r\n                 onChange={(evt) => setEmployeeData({ ...employeeData, name: evt.target.value })}/>\r\n          <label htmlFor=\"employee-phone-input\">Телефон: </label>\r\n          <input type=\"tel\" id=\"employee-phone-input\" value={employeeData.phone} required\r\n                 onChange={(evt) => setEmployeeData({ ...employeeData, phone: evt.target.value })}/>\r\n          <label htmlFor=\"employee-birthday-input\">Дата рождения: </label>\r\n          <input type=\"text\" id=\"employee-birthday-input\" value={employeeData.birthday}\r\n                 pattern=\"[0-9]{2}.[0-9]{2}.[0-9]{4}\" maxLength={10} required\r\n                 onChange={(evt) => setEmployeeData({ ...employeeData, birthday: evt.target.value })}/>\r\n          <label>Должность: </label>\r\n          <select value={employeeData.role}\r\n                  onChange={(evt) => setEmployeeData({ ...employeeData, role: evt.target.value })}>\r\n            <option value={FilterType.COOK}>Повар</option>\r\n            <option value={FilterType.WAITER}>Официант</option>\r\n            <option value={FilterType.DRIVER}>Водитель</option>\r\n          </select>\r\n          <label htmlFor=\"employee-archive-input\">В архиве? </label>\r\n          <input type=\"checkbox\" id=\"employee-archive-input\" checked={employeeData.isArchive}\r\n                 onChange={(evt) => setEmployeeData({ ...employeeData, isArchive: evt.target.checked })}/>\r\n          <input type=\"submit\" value=\"Сохранить\" onClick={saveDataHandler}/>\r\n        </form>\r\n      </section>\r\n    </>\r\n  ) : (\r\n    <div>\r\n      <h1>Ошибка! Такого сотрудника нет в базе.</h1>\r\n      <Link to={AppRoute.MAIN}>Вернуться на главную</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  employeesData: state.employeesData\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  saveEmployee(data: EmployeeData[]) {\r\n    dispatch(ActionCreator.loadEmployees(data))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeePage)\r\n","import React from 'react';\nimport { HashRouter, Link, Route, Switch } from 'react-router-dom'\nimport { AppRoute } from '../../const'\nimport './App.css';\nimport MainPage from \"../main-page/main-page\";\nimport EmployeePage from \"../employee-page/employee-page\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path={AppRoute.MAIN} component={MainPage}/>\n        <Route exact path={`${AppRoute.EMPLOYEE_PAGE}:id`}\n               render={({ match, history }) => {\n                 return <EmployeePage employeeId={match.params.id} history={history}/>\n               }}/>\n        <Route render={() => (\n          <React.Fragment>\n            <h1>Ошибка: 404. Страница не найдена.</h1>\n            <Link to={AppRoute.MAIN}>Вернуться на главную</Link>\n          </React.Fragment>\n        )}\n        />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from 'react-redux';\nimport { ActionCreator, reducer } from './reducer';\nimport employeesData from './employees.json';\nimport './index.css';\nimport App from './components/app/App';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(),\n);\n\nstore.dispatch(ActionCreator.loadEmployees(employeesData))\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}